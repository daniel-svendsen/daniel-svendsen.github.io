{"version":3,"file":"Recipes-Nzl4YXrk.js","sources":["../../node_modules/@headlessui/react/dist/internal/disabled.js","../../node_modules/@headlessui/react/dist/components/button/button.js","../../src/data/recipeIngredients.ts","../../src/components/Checkbox.tsx","../../src/components/RecipeGenerator.tsx","../../src/pages/Recipes.tsx"],"sourcesContent":["import n,{createContext as r,useContext as i}from\"react\";let e=r(void 0);function a(){return i(e)}function l({value:t,children:o}){return n.createElement(e.Provider,{value:t},o)}export{l as DisabledProvider,a as useDisabled};\n","\"use client\";import{useFocusRing as y}from\"@react-aria/focus\";import{useHover as b}from\"@react-aria/interactions\";import{useMemo as P}from\"react\";import{useActivePress as B}from'../../hooks/use-active-press.js';import{useDisabled as c}from'../../internal/disabled.js';import{forwardRefWithAs as A,mergeProps as g,useRender as _}from'../../utils/render.js';let R=\"button\";function v(a,u){var p;let l=c(),{disabled:e=l||!1,autoFocus:t=!1,...o}=a,{isFocusVisible:r,focusProps:i}=y({autoFocus:t}),{isHovered:s,hoverProps:T}=b({isDisabled:e}),{pressed:n,pressProps:d}=B({disabled:e}),f=g({ref:u,type:(p=o.type)!=null?p:\"button\",disabled:e||void 0,autoFocus:t},i,T,d),m=P(()=>({disabled:e,hover:s,focus:r,active:n,autofocus:t}),[e,s,r,n,t]);return _()({ourProps:f,theirProps:o,slot:m,defaultTag:R,name:\"Button\"})}let H=A(v);export{H as Button};\n","// Fil: src/data/recipeIngredients.ts\n// Justera sökväg och mappstruktur enligt ditt projekt\n\nexport interface Ingredient {\n  name: string\n  allergens: string[]\n  // Vill du ha flera alternativ? Byt ut mot: alternatives?: Ingredient[]\n  alternative?: Ingredient\n}\n\n/**\n * Stor lista av ingredienser, med allergener och ev. ersättningsprodukter.\n * Kategorier: protein, dairy, vegetables, fruits, spices, grains, other\n * Utökad med många nya val (asiatiska, mexikanska, medelhav) i passande kategorier.\n */\nexport const recipeIngredients = {\n  //--- PROTEIN ---//\n  protein: [\n    { name: 'Kyckling', allergens: [] },\n    { name: 'Nötfärs', allergens: [] }, // Man tål nötfärs även om man är nötallergiker\n    { name: 'Fläskfilé', allergens: [] },\n    { name: 'Korv', allergens: [] }, // ev. laktos/gluten beroende på sort\n    { name: 'Bacon', allergens: [] },\n    {\n      name: 'Lax',\n      allergens: ['Fisk'],\n      alternative: { name: 'Tofu', allergens: [] },\n    },\n    {\n      name: 'Räkor',\n      allergens: ['Skaldjur'],\n      alternative: { name: 'Bönor', allergens: [] },\n    },\n    {\n      name: 'Tonfisk',\n      allergens: ['Fisk'],\n      alternative: {\n        name: 'Quorn',\n        allergens: [], // justera om din Quorn innehåller ägg\n      },\n    },\n    {\n      name: 'Halloumi',\n      allergens: ['Laktos'],\n      alternative: { name: 'Tofu', allergens: [] },\n    },\n    { name: 'Kikärtor', allergens: [] },\n    { name: 'Röda linser', allergens: [] },\n\n    // Nya (asiatiska/mexikanska) proteiner\n    {\n      name: 'Edamame',\n      allergens: ['Soja'],\n    },\n    {\n      name: 'Tofuskinn (Yuba)',\n      allergens: ['Soja'],\n    },\n    {\n      name: 'Svarta bönor', // mexikanskt\n      allergens: [],\n    },\n    {\n      name: 'Refried beans', // mexikanskt\n      allergens: [],\n    },\n  ],\n\n  //--- MEJERI ---//\n  dairy: [\n    {\n      name: 'Mjölk',\n      allergens: ['Laktos'],\n      alternative: { name: 'Laktosfri mjölk', allergens: [] },\n    },\n    {\n      name: 'Grädde',\n      allergens: ['Laktos'],\n      alternative: {\n        name: 'Havregrädde',\n        allergens: ['Gluten'], // kan vara kontaminerad\n      },\n    },\n    {\n      name: 'Smör',\n      allergens: ['Laktos'],\n      alternative: { name: 'Mjölkfritt margarin', allergens: [] },\n    },\n    {\n      name: 'Ost',\n      allergens: ['Laktos'],\n      alternative: { name: 'Laktosfri ost', allergens: [] },\n    },\n    {\n      name: 'Créme Fraiche',\n      allergens: ['Laktos'],\n      alternative: { name: 'Soyabaserad Fraiche', allergens: [] },\n    },\n    {\n      name: 'Mjölkchoklad',\n      allergens: ['Laktos'], // ev. spår av nötter\n      alternative: {\n        name: 'Mörk choklad (vegansk)',\n        allergens: [],\n      },\n    },\n    {\n      name: 'Kvarg',\n      allergens: ['Laktos'],\n      alternative: { name: 'Laktosfri kvarg', allergens: [] },\n    },\n\n    // Nya (mexikanska/medelhav)\n    {\n      name: 'Queso Fresco', // mexikanskt\n      allergens: ['Laktos'],\n      alternative: { name: 'Laktosfri Queso', allergens: [] },\n    },\n    {\n      name: 'Fetaost', // medelhav\n      allergens: ['Laktos'],\n      alternative: { name: 'Laktosfri feta', allergens: [] },\n    },\n    {\n      name: 'Mozzarella', // medelhav\n      allergens: ['Laktos'],\n      alternative: { name: 'Vegansk mozzarella', allergens: [] },\n    },\n  ],\n\n  //--- GRÖNSAKER ---//\n  vegetables: [\n    { name: 'Tomat', allergens: [] },\n    { name: 'Gurka', allergens: [] },\n    { name: 'Lök', allergens: [] },\n    { name: 'Paprika', allergens: [] },\n    { name: 'Sallad', allergens: [] },\n    { name: 'Morot', allergens: [] },\n    { name: 'Broccoli', allergens: [] },\n    { name: 'Blomkål', allergens: [] },\n    { name: 'Majs', allergens: [] },\n    {\n      name: 'Selleri',\n      allergens: ['Selleri'],\n      alternative: { name: 'Zucchini', allergens: [] },\n    },\n    { name: 'Rödbetor', allergens: [] },\n    { name: 'Sparris', allergens: [] },\n    { name: 'Champinjoner', allergens: [] },\n    { name: 'Fänkål', allergens: [] },\n    { name: 'Ruccola', allergens: [] },\n\n    // Nya (mexikanska/medelhav)\n    { name: 'Jalapeños', allergens: [] }, // mexikanskt\n    { name: 'Oliver', allergens: [] }, // medelhav\n    {\n      name: 'Soltorkade tomater',\n      allergens: [],\n    },\n  ],\n\n  //--- FRUKTER ---//\n  fruits: [\n    { name: 'Äpple', allergens: [] },\n    { name: 'Banan', allergens: [] },\n    { name: 'Apelsin', allergens: [] },\n    { name: 'Avokado', allergens: [] },\n    { name: 'Citron', allergens: [] },\n    { name: 'Päron', allergens: [] },\n    { name: 'Vindruvor', allergens: [] },\n    { name: 'Mango', allergens: [] },\n    { name: 'Ananas', allergens: [] },\n    { name: 'Kiwi', allergens: [] },\n  ],\n\n  //--- KRYDDOR ---//\n  spices: [\n    { name: 'Salt', allergens: [] },\n    { name: 'Peppar', allergens: [] },\n    { name: 'Oregano', allergens: [] },\n    { name: 'Paprikapulver', allergens: [] },\n    { name: 'Vitlökspulver', allergens: [] },\n    { name: 'Curry', allergens: [] },\n    { name: 'Kanel', allergens: [] },\n    {\n      name: 'Senapspulver',\n      allergens: ['Senap'],\n      alternative: { name: 'Pepparrotspulver', allergens: [] },\n    },\n    { name: 'Chiliflakes', allergens: [] },\n    { name: 'Ingefära', allergens: [] },\n    { name: 'Gurkmeja', allergens: [] },\n    { name: 'Herbes de Provence', allergens: [] },\n    { name: 'Rökt paprika', allergens: [] },\n\n    // Nya\n    {\n      name: 'Tacokrydda', // mexikanskt\n      allergens: [],\n    },\n    {\n      name: 'Koriander', // mexikanskt men räknas ofta som ört\n      allergens: [],\n    },\n    {\n      name: 'Basilika', // medelhav\n      allergens: [],\n    },\n  ],\n\n  //--- GRYN & BRÖD ---//\n  grains: [\n    {\n      name: 'Pasta',\n      allergens: ['Gluten'],\n      alternative: { name: 'Glutenfri pasta', allergens: [] },\n    },\n    { name: 'Ris', allergens: [] },\n    {\n      name: 'Bröd',\n      allergens: ['Gluten'],\n      alternative: { name: 'Glutenfritt bröd', allergens: [] },\n    },\n    {\n      name: 'Idéalmjöl',\n      allergens: ['Gluten'],\n      alternative: { name: 'Glutenfritt mjöl', allergens: [] },\n    },\n    {\n      name: 'Couscous',\n      allergens: ['Gluten'],\n      alternative: {\n        name: 'Bulgur (kan också innehålla gluten)',\n        allergens: ['Gluten'],\n      },\n    },\n    {\n      name: 'Havregryn',\n      allergens: ['Gluten'], // om ej garanterat GF\n      alternative: { name: 'Ren havre (GF-märkt)', allergens: [] },\n    },\n    { name: 'Quinoa', allergens: [] },\n    {\n      name: 'Matvete',\n      allergens: ['Gluten'],\n      alternative: { name: 'Hirs', allergens: [] },\n    },\n    { name: 'Polenta', allergens: [] },\n\n    // Nya\n    {\n      name: 'Ramen (vete)',\n      allergens: ['Gluten'],\n      alternative: { name: 'Risnudlar', allergens: [] },\n    },\n    {\n      name: 'Vetetortilla',\n      allergens: ['Gluten'],\n      alternative: { name: 'Majstortilla', allergens: [] },\n    },\n  ],\n\n  //--- ÖVRIGT ---//\n  other: [\n    { name: 'Olivolja', allergens: [] },\n    {\n      name: 'Sojasås',\n      allergens: ['Gluten'], // om ej GF\n      alternative: { name: 'Tamari', allergens: [] },\n    },\n    { name: 'Kokosmjölk', allergens: [] },\n    { name: 'Potatis', allergens: [] },\n    {\n      name: 'Jordnötter',\n      allergens: ['Nötter'],\n      alternative: { name: 'Solrosfrön', allergens: [] },\n    },\n    {\n      name: 'Mandel',\n      allergens: ['Nötter'],\n      alternative: { name: 'Kokosflingor', allergens: [] },\n    },\n    {\n      name: 'Ägg',\n      allergens: ['Ägg'],\n      alternative: { name: 'No-egg replacer', allergens: [] },\n    },\n    { name: 'Ketchup', allergens: [] },\n    {\n      name: 'Majonnäs',\n      allergens: ['Ägg'],\n      alternative: { name: 'Vegansk majonnäs', allergens: [] },\n    },\n\n    // Asiatiska\n    { name: 'Sesamolja', allergens: [] },\n    {\n      name: 'Fisksås',\n      allergens: ['Fisk'],\n      alternative: {\n        name: 'Vegansk fisksås (baserad på alger)',\n        allergens: [],\n      },\n    },\n    { name: 'Mirin', allergens: [] },\n    {\n      name: 'Miso',\n      allergens: ['Soja'], // ev. gluten (kornmiso)\n      alternative: {\n        name: 'Miso (glutenfri)',\n        allergens: ['Soja'],\n      },\n    },\n    { name: 'Sriracha', allergens: [] },\n    {\n      name: 'Kimchi',\n      allergens: ['Fisk'], // vanlig kimchi har fisksås\n      alternative: { name: 'Vegansk kimchi', allergens: [] },\n    },\n    {\n      name: 'Chipotlepasta', // mexikanskt\n      allergens: [],\n    },\n    { name: 'Salsa', allergens: [] }, // mexikanskt\n    { name: 'Tacosås', allergens: [] }, // mexikanskt\n    { name: 'Guacamole', allergens: [] }, // mexikanskt\n    {\n      name: 'Tapenade', // medelhav\n      allergens: [],\n    },\n    {\n      name: 'Ajvar', // medelhav\n      allergens: [],\n    },\n    {\n      name: 'Pesto', // medelhav\n      allergens: ['Nötter'], // pinjenötter\n      alternative: {\n        name: 'Pesto utan nötter',\n        allergens: [],\n      },\n    },\n  ],\n}\n","import React from 'react'\n\ninterface ClickableItemProps {\n  label: string\n  selected: boolean\n  onChange: () => void\n  disabled?: boolean\n}\n\nconst Checkbox: React.FC<ClickableItemProps> = ({\n  label,\n  selected,\n  onChange,\n  disabled = false,\n}) => {\n  return (\n    <div\n      onClick={disabled ? undefined : onChange}\n      className={`\n        cursor-pointer select-none rounded px-3 py-2 border text-sm transition-colors\n        ${selected ? 'bg-blue-500 text-white border-transparent' : 'bg-white text-black border-gray-300'}\n        ${disabled ? 'opacity-50 cursor-not-allowed' : ''}\n      `}\n    >\n      {label}\n    </div>\n  )\n}\n\nexport default Checkbox","import { useRef, useState } from 'react'\nimport { Button } from '@headlessui/react'\nimport { recipeIngredients } from '@/data/recipeIngredients'\nimport Checkbox from '@/components/CheckBox'\n\nexport default function RecipeGenerator() {\n  const [selectedAllergens, setSelectedAllergens] = useState<string[]>([])\n  const [selectedIngredients, setSelectedIngredients] = useState<string[]>([])\n  const [recipes, setRecipes] = useState<string[]>([])\n  const [loading, setLoading] = useState(false)\n  const [servings, setServings] = useState<number>(4)\n  const [mobileTab, setMobileTab] = useState<'ingredients' | 'recipes'>(\n    'ingredients',\n  )\n  const [cuisine, setCuisine] = useState<string>('') // Nytt state för matkultur\n\n  // Referens till receptpanelen för att scrolla dit efter generering\n  const recipesRef = useRef<HTMLDivElement>(null)\n\n  const allergenOptions = [\n    'Nötter',\n    'Gluten',\n    'Laktos',\n    'Ägg',\n    'Fisk',\n    'Skaldjur',\n    'Selleri',\n    'Senap',\n  ]\n\n  // Returnerar true om någon av de specificerade allergenerna finns i de valda\n  const triggersAllergy = (allergens: string[]) =>\n    allergens.some((allergen) => selectedAllergens.includes(allergen))\n\n  // Filtrerar ingredienser så att allergiframkallande alternativ ersätts om möjligt\n  function getDisplayableItems(\n    items: { name: string; allergens: string[]; alternative?: any }[],\n  ) {\n    const results: typeof items = []\n    for (const item of items) {\n      if (!triggersAllergy(item.allergens)) {\n        results.push(item)\n      } else if (\n        item.alternative &&\n        !triggersAllergy(item.alternative.allergens)\n      ) {\n        results.push(item.alternative)\n      }\n    }\n    return results\n  }\n\n  // Toggle för allergier\n  const toggleAllergen = (allergen: string) => {\n    setSelectedAllergens((prev) =>\n      prev.includes(allergen)\n        ? prev.filter((a) => a !== allergen)\n        : [...prev, allergen],\n    )\n  }\n\n  // Toggle för ingredienser\n  const toggleIngredient = (ingredientName: string) => {\n    setSelectedIngredients((prev) =>\n      prev.includes(ingredientName)\n        ? prev.filter((i) => i !== ingredientName)\n        : [...prev, ingredientName],\n    )\n  }\n\n  // Nollställ alla val\n  const deselectAll = () => {\n    setSelectedAllergens([])\n    setSelectedIngredients([])\n  }\n\n  // Anropar backend och genererar recept\n  const generateRecipes = async () => {\n    setLoading(true)\n    try {\n      const response = await fetch('/api/generate-recipes', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          allergens: selectedAllergens,\n          ingredients: selectedIngredients,\n          servings: servings,\n          cuisine: cuisine,\n        }),\n      })\n\n      const data = await response.json()\n      if (data.recipes) {\n        setRecipes(data.recipes)\n      } else if (data.error) {\n        setRecipes([data.error])\n      } else {\n        setRecipes(['Inget svar eller oväntat svar från servern.'])\n      }\n      // Scrolla ner till receptpanelen efter att recepten har laddats\n      recipesRef.current?.scrollIntoView({ behavior: 'smooth' })\n    } catch (error: any) {\n      console.error(error)\n      setRecipes([\n        error.message || 'Fel vid API-anropet. Se console för mer info.',\n      ])\n    }\n    setLoading(false)\n  }\n\n  // Panel för ingredienser, allergier, matkultur och antal personer\n  const renderIngredientsPanel = () => (\n    <div className=\"rounded-lg border bg-white p-4 shadow\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"text-lg font-bold\">Välj ingredienser</h2>\n        <button\n          onClick={deselectAll}\n          className=\"text-xs text-blue-500 underline\"\n        >\n          Avmarkera alla\n        </button>\n      </div>\n\n      {/* Antal personer */}\n      <div className=\"mb-4\">\n        <label className=\"font-semibold block mb-2\" htmlFor=\"servings\">\n          Antal personer\n        </label>\n        <input\n          type=\"number\"\n          id=\"servings\"\n          min={1}\n          value={servings}\n          onChange={(e) => setServings(Number(e.target.value))}\n          className=\"w-full rounded border border-gray-300 p-2\"\n        />\n      </div>\n\n      {/* Allergier */}\n      <div className=\"mb-4\">\n        <h3 className=\"font-semibold\">Allergier</h3>\n        <div className=\"flex flex-wrap gap-2 mt-2\">\n          {allergenOptions.map((all) => (\n            <Checkbox\n              key={all}\n              label={all}\n              selected={selectedAllergens.includes(all)}\n              onChange={() => toggleAllergen(all)}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Matkultur */}\n      <div className=\"mb-4\">\n        <h3 className=\"font-semibold\">Matkultur (valfritt)</h3>\n        <select\n          value={cuisine}\n          onChange={(e) => setCuisine(e.target.value)}\n          className=\"w-full rounded border border-gray-300 p-2\"\n        >\n          <option value=\"\">Ingen specifik matkultur</option>\n          <option value=\"medelhavs\">Medelhavs</option>\n          <option value=\"mellanostern\">Mellanöstern</option>\n          <option value=\"italiensk\">Italienskt</option>\n          <option value=\"fransk\">Franskt</option>\n          <option value=\"nordisk\">Nordiskt</option>\n        </select>\n      </div>\n\n      {/* Ingredienskategorier */}\n      {Object.entries(recipeIngredients).map(([catName, catItems]) => {\n        const displayable = getDisplayableItems(catItems)\n        return (\n          <div key={catName} className=\"mb-6\">\n            <h3 className=\"font-semibold capitalize mb-2\">{catName}</h3>\n            <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-2\">\n              {displayable.map((item) => (\n                <Checkbox\n                  key={item.name}\n                  label={item.name}\n                  selected={selectedIngredients.includes(item.name)}\n                  onChange={() => toggleIngredient(item.name)}\n                />\n              ))}\n            </div>\n          </div>\n        )\n      })}\n\n      <Button\n        onClick={generateRecipes}\n        className=\"mt-4 w-full bg-blue-500 text-white py-2 rounded\"\n        disabled={loading}\n      >\n        {loading ? 'Genererar...' : 'Generera Recept'}\n      </Button>\n    </div>\n  )\n\n  // Panel för att visa genererade recept\n  const renderRecipesPanel = () => (\n    <div ref={recipesRef} className=\"rounded-lg bg-gray-100 p-4 shadow w-full\">\n      <h2 className=\"text-xl font-bold mb-2\">Genererade Recept</h2>\n      {loading ? (\n        <p>Laddar recept...</p>\n      ) : recipes.length ? (\n        <ul>\n          {recipes.map((recipe, index) => (\n            <li key={index} className=\"p-2 border-b whitespace-pre-wrap\">\n              {recipe}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className=\"text-gray-600\">\n          Inga recept än. Välj ingredienser, ange antal personer och klicka\n          “Generera Recept”!\n        </p>\n      )}\n    </div>\n  )\n\n  return (\n    <div className=\"min-h-screen p-4\">\n      {/* Instruktionstext */}\n      <div className=\"mb-4 text-gray-700 text-sm\">\n        Välj dina ingredienser, allergier och matkultur (valfritt). Ange antal\n        personer och klicka \"Generera Recept\".\n        <br />\n        Resultatet kommer alltid att ha följande layout: först en lista med\n        ingredienser, sedan en detaljerad beskrivning av tillvägagångssättet.\n      </div>\n      {/* MOBIL LAYOUT */}\n      <div className=\"block md:hidden\">\n        <div className=\"flex gap-2 mb-4\">\n          <button\n            onClick={() => setMobileTab('ingredients')}\n            className={`flex-1 py-2 rounded ${\n              mobileTab === 'ingredients'\n                ? 'bg-blue-500 text-white'\n                : 'bg-gray-200 text-black'\n            }`}\n          >\n            Ingredienser\n          </button>\n          <button\n            onClick={() => setMobileTab('recipes')}\n            className={`flex-1 py-2 rounded ${\n              mobileTab === 'recipes'\n                ? 'bg-blue-500 text-white'\n                : 'bg-gray-200 text-black'\n            }`}\n          >\n            Recept\n          </button>\n        </div>\n        {mobileTab === 'ingredients' && renderIngredientsPanel()}\n        {mobileTab === 'recipes' && renderRecipesPanel()}\n      </div>\n\n      {/* DESKTOP LAYOUT */}\n      <div className=\"hidden md:flex md:gap-4\">\n        <div className=\"md:w-1/2\">{renderRecipesPanel()}</div>\n        <div className=\"md:w-1/2\">{renderIngredientsPanel()}</div>\n      </div>\n    </div>\n  )\n}","import RecipeGenerator from '@/components/RecipeGenerator'\n\nexport default function RecipesPage() {\n  return (\n    <div className=\"p-6\">\n      <h1 className=\"text-2xl font-bold mb-4\">Receptgenerator</h1>\n      <RecipeGenerator />\n    </div>\n  )\n}"],"names":["e","r","a","i","R","v","u","p","l","c","t","o","y","s","T","b","n","d","B","f","g","m","P","_","A","recipeIngredients","Checkbox","label","selected","onChange","disabled","jsx","RecipeGenerator","selectedAllergens","setSelectedAllergens","useState","selectedIngredients","setSelectedIngredients","recipes","setRecipes","loading","setLoading","servings","setServings","mobileTab","setMobileTab","cuisine","setCuisine","recipesRef","useRef","allergenOptions","triggersAllergy","allergens","allergen","getDisplayableItems","items","results","item","toggleAllergen","prev","toggleIngredient","ingredientName","deselectAll","generateRecipes","data","_a","error","renderIngredientsPanel","jsxs","all","catName","catItems","displayable","Button","renderRecipesPanel","recipe","index","RecipesPage"],"mappings":"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","x_google_ignoreList":[0,1]}